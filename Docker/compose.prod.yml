networks:
  totem_network_static:
    driver: bridge
services:
  backend:
    build:
      context: ../Backend/apis
      dockerfile: ../../Docker/Backend/dockerfile
    environment:
      NODE_ENV: production
      ELASTIC_NODE: http://database:9200
      # Si usas seguridad en ES, habilita una de estas:
      # ELASTIC_API_KEY: ${ELASTIC_API_KEY}
      # ELASTIC_API_KEY_ID: ${ELASTIC_API_KEY_ID}
      # ELASTIC_API_KEY_VALUE: "MldLSUxKa0I4dk5pN0lhZjZDMUI6VGpBVG1CUXFRcENHbVJyRVFlZE1Mdw=="
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: test123
    ports:
      - "4004:4004"
    networks:
      - totem_network_static
    restart: unless-stopped

  database_es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTICS_USERNAME=elastic
      - ELASTIC_PASSWORD=test123
      - path.repo=/snapshots
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./Database/backup/es_snapshots:/snapshots 
    ports:
      - "5004:9200"
    networks:
      - totem_network_static
    restart: unless-stopped
  
  database_mongo:
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: test123
      MONGO_INITDB_DATABASE: totem_admins
    ports:
      - "27017:27017"
    volumes:
      - ./Database/backup/mongo_data:/data/db
      - ./Database/backup/mongo_keyfile:/data/keyfile:ro
      - ./Database/backup/mongo_init:/docker-entrypoint-initdb.d:ro
    networks:
      - totem_network_static
    restart: unless-stopped
    entrypoint:
      - bash
      - -c
      - |
        openssl rand -base64 756 > /data/mongodb-keyfile
        chmod 400 /data/mongodb-keyfile
        chown 999:999 /data/mongodb-keyfile
        exec docker-entrypoint.sh mongod --replSet rs0 --bind_ip_all --keyFile /data/mongodb-keyfile
    healthcheck:
      test: |
        mongosh -u admin -p test123 --authenticationDatabase admin --eval "
        try {
          rs.status();
        } catch(e) {
          rs.initiate({
            _id: 'rs0',
            members: [{ _id: 0, host: 'localhost:27017' }]
          });
        }
        " || exit 1
      interval: 10s
      timeout: 10s
      start_period: 40s
      retries: 5

  frontend:
    build:
      context: ../Frontend
      dockerfile: ../Docker/Frontend/dockerfile
      args:
        VITE_API_BASE_URL: "http://backend:4004"
        VITE_BUILD_MODE: "true"
    ports:
      - "3004:3004"
    networks:
      - totem_network_static
    depends_on: [ backend ]
    restart: unless-stopped


volumes:
  esdata:

